

.section_data
at #0b0001000000

TOP:



    VARS:                                         

        hello_world: .ascii "Hello|World@"   
        sizeof previous
        example_num: .byte #255 

    VARS_END:  
    sizeof VARS VARS_END




.section_text

    set STRING_INDEX r0
    set TEMP_CHAR r1 
    set CHAR_SCREEN io0 
    set SET_CHAR_SCREEN io1
    set NULL_TERM #0                        ; null terminator for string

    at #0x0000000000



        start:
            jmp init
            
        init:
            cld +Vars                           ; + meaning use page address aka 0b1100 (upper 4 bits)
            mov r0 &hello_world                 ; - meaning the cache address aka 0b000000 (lower 6 bits)
            mov ptr r0

            mov STRING_INDEX #0                 ; variable to increment
            mov TEMP_CHAR #0                    ; temp register for character
            jmp main    

        main:
            mov TEMP_CHAR c{STRING_INDEX}
            cmp TEMP_CHAR NULL_TERM
            jif eq quit 
            snd CHAR_SCREEN c{STRING_INDEX}
            add STRING_INDEX STRING_INDEX #1
            jmp main

        quit:
            snd SET_CHAR_SCREEN c0
            hlt



sizeof TOP BOTTOM
BOTTOM:





cld +start


.section_data

    set PI #3

.section_text
    at #0b0000000



    start:
        ;sub r0 BURGER PI 2_bytes
        ;sizeof previous


        not r0 PIE 3_bytes
        sizeof previous


xld p0 x0
xst x0 p0


snd io0 c0
rec c0 io0
wre c0 io0


add *r2 r0 r1